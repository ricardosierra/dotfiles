#source "$POWERLINE_PREFIX/bindings/tmux/powerline.conf"

# PREFIX
set -g prefix2 C-a                                      # GNU-Screen compatible prefix
bind C-a send-prefix -2

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
#bind-key a send-prefix

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window


######################################
###############  ATALHOS #############
######################################
setw -g xterm-keys on
setw -g aggressive-resize off

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal


set -g @continuum-restore 'on'

# edit configuration
bind e new-window -n 'tmux.conf' "sh -c 'vim ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Ensure 2nd column in the main-vertical layout is 80 chars wide
set -g other-pane-width 80

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# vim-tmux integration helper
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


######################################
###############  SPLITS #############
######################################
# set window split
#bind-key v split-window -h
#bind-key b split-window
# Alt-Shift-Left/Right/Up/Down         Create a new split in the given direction
bind-key -n M-S-Left split-window -h -c "#{pane_current_path}" \; swap-pane -s :. -t :.- \; select-pane -t :.- \; display-panes
bind-key -n M-S-Up split-window -v -c "#{pane_current_path}" \; swap-pane -s :. -t :.- \; select-pane -t :.- \; display-panes
bind-key -n M-S-Right display-panes \; split-window -h -c "#{pane_current_path}"
bind-key -n M-S-Down display-panes \; split-window -v -c "#{pane_current_path}"
# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'



######################################
###############  SELECT PANES #############
######################################
# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Ctrl-Left/Right/Up/Down              Move focus among splits
bind-key -n C-Up    if "$is_vim" "send C-Up"    "select-pane -U"
bind-key -n C-Down  if "$is_vim" "send C-Down"  "select-pane -D"
bind-key -n C-Left  if "$is_vim" "send C-Left"  "select-pane -L"
bind-key -n C-Right if "$is_vim" "send C-Right" "select-pane -R"
# Ctrl-\                               Last pane
bind-key -n C-\     if "$is_vim" "send C-\\"    "select-pane -l"

# F10                                  Used by X11
# F11                                  Used by X11

# Ctrl-Shift-Left/Right                Swap the current split with another
# bind-key -n C-S-Left display-panes \; swap-pane -s :. -t :.- \; select-pane -t :.-
# bind-key -n C-S-Right display-panes \; swap-pane -s :. -t :.+ \; select-pane -t :.+

# Ctrl-Shift-Up                        Balance panes horizontally
# bind-key -n C-S-Up display-panes \; select-layout even-horizontal


#  F3/F4                          Move focus among windows
# bind-key -n F3 previous-window
# bind-key -n F4 next-window
#    Shift-F3/F4                  Move focus among splits
# bind-key -n S-F3 display-panes \; select-pane -t :.-
# bind-key -n S-F4 display-panes \; select-pane -t :.+
#    Ctrl-Shift-F3/F4             Move a window
# bind-key -n C-S-F3 swap-window -t :-1
# bind-key -n C-S-F4 swap-window -t :+1

#    Alt-F9                       Toggle sending keyboard input to all splits
# bind-key -n M-F9 display-panes \; setw synchronize-panes


######################################
###############  RESIZE PANES #############
######################################
# Ctrl-Shift-Left/Right/Up/Down        Resize the current split by 1
bind-key -n C-S-Up display-panes \; resize-pane -U 1
bind-key -n C-S-Down display-panes \; resize-pane -D 1
bind-key -n C-S-Left display-panes \; resize-pane -L 1
bind-key -n C-S-Right display-panes \; resize-pane -R 1

# Alt-Up                               Zoom pane in/out
bind-key -n M-Up resize-pane -Z

# Alt-Down                             Cycle through layouts
bind-key -n M-Down display-panes \; next-layout


######################################
###############  SELECT WINDOWS #############
######################################
# Alt-,/.                              Move focus among windows
bind-key -n M-, previous-window
bind-key -n M-. next-window

# Alt-[/]                              Move focus among sessions
bind-key -n M-[ switch-client -p
bind-key -n M-] switch-client -n


# Alt-BackSpace/Delete                 Kill current focused split
bind-key -n M-DC kill-pane
bind-key -n M-BSpace kill-pane


bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key L resize-pane -R 10
bind-key H resize-pane -L 10


bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# F1                                   Used by X11

# Shift-F1
bind-key -n S-F1 new-window -k -n "tmux help" "man tmux"

# F2                                   New window
bind-key -n F2 command-prompt -p \
  "[New window] Enter name or Ctrl-C to cancel:" \
  "new-window -c '#{pane_current_path}'; run-shell 'a=%%; tmux rename-window \${a:--}'"
# Shift-F2                             Rename window
bind-key -n S-F2 command-prompt -p \
  "[Rename window] Enter name or Ctrl-C to cancel (current=#W):" \
  "run-shell 'a=%%; tmux rename-window \${a:-#W}'"

# F3                                   New session
bind-key -n F3 command-prompt -p \
  "[New session] Enter name or Ctrl-C to cancel:" \
  "new-session; run-shell 'a=%%; tmux rename-session \${a:--}'"
# Shift-F3                             Rename session
bind-key -n S-F3 command-prompt -p \
  "[Rename session] Enter name or Ctrl-C to cancel (current=#S):" \
  "run-shell 'a=%%; tmux rename-session \${a:-#S} || true'"


# Alt-F3                          Expand pane to a full window
# bind-key -n M-F3 break-pane
# Ctrl-F3                         Join window into a vertical split
# bind-key -n C-F3 join-pane -h -s :. -t :-1

# F9                                   Detach session and then logout
bind-key -n F9 detach-client
# Shift-F9                             Detach session and do not logout
bind-key -n S-F9 run-shell "exec touch $DOTFILES/caches/tmux-no-logout" \; detach
# Ctrl-F9                              Detach all clients but the current one
bind-key -n C-F9 detach-client -a



######################################
###############  ATALHOS VIM #############
######################################

# Vi copypaste mode
unbind-key -T copy-mode-vi Space
unbind-key -T copy-mode-vi Enter
set-window-option -g mode-keys vi
bind P paste-buffer
unbind-key y
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


######################################
###############  ATALHOS VIM ANTIGOS#############
######################################

# #    Shift-F7                     Save history to $BYOBU_RUN_DIR/printscreen
# # bind-key -n S-F7 capture-pane -S -32768 \; save-buffer "$BYOBU_RUN_DIR/printscreen" \; delete-buffer \; new-window -n "PRINTSCREEN" "$EDITOR $BYOBU_RUN_DIR/printscreen"

# # Shift-Up                             Enter scrollback mode
# bind-key -n S-Up    if "$is_vim" "send S-Up" "copy-mode"
# # Shift-Up/Down                        Copy mode: scroll up/down a half-page at a time
# bind-key -T copy-mode-vi S-Up send -X halfpage-up
# bind-key -T copy-mode-vi S-Down send -X halfpage-down
# # bind-key -T copy-mode-vi
# # bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "$clipboard_copy_command"



######################################
###############  CONFIGURACOES #############
######################################

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on


# auto window rename
# Desativei porque essa porra te fode quando voce decide nomear as janelas
# set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Default terminal
# set-option -g default-shell /bin/bash
set-option -g default-shell /bin/zsh

# status bar
# set-option -g status-utf8 off

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Speed settings for vim:
set -s escape-time 50

set -g @override_copy_command 'xclip -sel clip'
set -g @override_copy_selection 'xclip -sel clip'

# Status update interval
set -g status-interval 2                                # Update status frequently



######################################
###############  VISUAL #############
######################################



######################################
###########  WINDOW STATUS #########
######################################

# Highlight active window
set-window-option -g window-status-current-style bg=blue

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "


# Current window status
setw -g window-status-current-style bg=red,fg=black
# set -g window-status-current-bg red
# set -g window-status-current-fg black


# Window with activity status
set -g  window-status-activity-style fg=black,bg=yellow,bold
# set -g window-status-activity-bg yellow # fg and bg are flipped here due to a
# set -g window-status-activity-fg black  # bug in tmux

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre


######################################
###############  VISUAL #############
######################################

# Pane border
set -g pane-border-style bg=default,fg=default
# set -g pane-border-bg default
# set -g pane-border-fg default

# Active pane border @todo ver cor nova
set -g pane-active-border-style bg=colour236,fg=colour251
# set -g pane-active-border-style "fg=brightred"
# set -g pane-active-border-bg default
# set -g pane-active-border-fg green

# Pane number indicator
set -g display-panes-colour default
# set -g display-panes-colour blue # era azul
set -g display-panes-active-colour default
# set -g display-panes-active-colour brightgreen #era assim antes

# Clock mode
set -g clock-mode-colour red
set -g clock-mode-style 24

# messaging
# set -g message-bg default
# set -g message-fg default
# set -g message-command-bg default
# set -g message-command-fg default
set -g message-style "fg=default bg=default"
set -g message-command-style "fg=default bg=default"

# Mode
setw -g mode-style "bg=red fg=default"
# set -g mode-bg red
# set -g mode-fg default


######################################
###############  The statusbar  #############
######################################
# Basic status bar colors
set -g status-position bottom
set -g status-bg black
set -g status-fg cyan
#set -g status-fg white

# Left side of status bar
setw -g status-left-style "bg=black fg=green"
# set -g status-left-bg black
# set -g status-left-fg green
set -g status-left-length 40
set -g status-left "#{online_status} #S #[fg=white]» #[fg=yellow][#I]: #[fg=cyan]#P"

# Right side of status bar
setw -g status-right-style "bg=black fg=cyan"
# set -g status-right-bg black
# set -g status-right-fg cyan
set -g status-right-length 100
set -g status-right "#H #[fg=white]« #[fg=yellow]%H:%M:%S #[fg=green]%d/%m/%Y #[fg=white]» #{battery_icon}#{battery_percentage} » #{cpu_fg_color}#{cpu_icon} #{cpu_percentage}"

# Info on left (I don't have a session display for now)
#set -g status-left "#{online_status}"
#set -g status-right "#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} #[fg=blue]#H %a | %d/%h"
setw -g window-status-style bg=colour235,fg=colour138,none
setw -g window-status-bell-style bg=colour1,fg=colour255,bold

######################################
###############  VEIO DO MEU TMUX ANTIGO #############
######################################

# GENERAL
set -gq status-utf8 on                                  # Expect UTF-8 (tmux < 2.2)
set -gq utf8 on
set -sg repeat-time 600                                 # Increase repeat timeout
set -s focus-events on
set -g history-limit 50000                              # Increase history size
set -g mouse on                                         # Enable mouse mode
set -g renumber-windows on                              # Renumber windows whenever any window is closed

setw -g xterm-keys on



######################################
###############  FIX BUGS #############
######################################


# # https://github.com/tmux/tmux/issues/435#issuecomment-226849415
# # http://joehanchoi.com/quick-fixes-for-tmux-2-1-on-osx/
# set -g default-terminal "tmux-256color"                 # Color and italics!
# set -as terminal-overrides ',xterm*:sitm=\E[3m'         # OS X only?


# # Ensure pbpaste/pbcopy work in OSX
# # https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# if 'test "$(uname -s)" = Darwin' 'set -g default-command "exec reattach-to-user-namespace -l $SHELL"'

######################################
###############  PLUGINS #############
######################################

# # https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-pain-control'





# # # set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'

# # set -g @resurrect-processes 'ssh'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-save-bash-history 'off'
set -g @resurrect-capture-pane-contents 'on'



# RUN tpms
# run -b '~/.tmux/plugins/tpm/tpm'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
#run '~/.tmux/plugins/tpm/tpm'